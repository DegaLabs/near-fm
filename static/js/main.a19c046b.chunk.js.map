{"version":3,"sources":["App.js","pages/Account.js","images/near_vodka_logo.png","components/NewPost.js","pages/Home.js","index.js","components/Account.js","components/Post.js","components/Feed.js","components/FollowButton.js","data/Account.js"],"names":["NearConfig","window","location","hostname","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","App","props","_near","blockViewCall","blockId","methodName","args","account","validateArgs","connection","lastBlockHeight","archivalConnection","provider","query","request_type","block_id","account_id","method_name","args_base64","Buffer","JSON","stringify","toString","result","length","parse","from","state","connected","isNavCollapsed","newPosts","_initNear","then","setState","signedIn","accountId","signedAccountId","a","keyStore","nearAPI","BrowserLocalStorageKeyStore","Object","assign","deps","near","this","fromConfig","type","url","signer","walletConnection","getAccountId","block","finality","header","height","contract","viewMethods","changeMethods","storage_minimum_balance","storageMinimumBalance","accounts","getAccount","Promise","resolve","AccountData","load","accountData","fetchFollowings","followings","enoughStorageBalance","stats","e","preventDefault","requestSignIn","signOut","_accountId","storage_deposit","yo","className","onClick","requestStorageBalance","logOut","role","aria-hidden","href","title","src","NearVodkaLogo","alt","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","data-ribbon","basename","process","exact","path","updateState","s","React","Component","AccountPage","useParams","useState","seed","setSeed","setAccount","useEffect","lastPostHeight","module","exports","NewPost","body","setBody","post","_body","time","Date","getTime","placeholder","rows","value","onChange","target","disabled","HomePage","followingSeed","setFollowingSeed","latestSeed","setLatestSeed","entries","map","push","get_num_accounts","numAccounts","get_accounts","from_index","Math","max","limit","accountStats","convertAccountStats","fetchRandomFeed","Feed","extraPosts","ReactDOM","render","document","getElementById","Account","data-tip","data-for","to","delayHide","delayShow","effect","FollowButton","numPosts","numFollowers","numFollowing","Post","datetime","parseFloat","posts","setPosts","recent","SortedSet","pop","blockHeight","last_post_height","fetchPosts","feed","key","block_height","follow","unfollow","MinEnoughStorageBalance","BN","num_posts","num_followers","num_following","followers","_ready","storage_balance_of","storageBalance","storageTotal","total","storageAvailable","available","get_account","all","_fetchStorageBalance","_fetchAccountStats","promises","i","get_following","flat","forEach","fetch"],"mappings":"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","file":"static/js/main.a19c046b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport HomePage from \"./pages/Home\"\nimport AccountPage from \"./pages/Account\"\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport * as nearAPI from 'near-api-js'\nimport {AccountData} from \"./data/Account\";\nimport NearVodkaLogo from \"./images/near_vodka_logo.png\"\n\n// 4 epochs\nconst NumBlocksNonArchival = 4 * 12 * 3600;\n\nconst IsMainnet = window.location.hostname === \"near.vodka\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1613368835598-7014445',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\n\nconst MainNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1613368835598-7014445',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\n\n// const MainNearConfig = {\n//   networkId: 'mainnet',\n//   nodeUrl: 'https://rpc.mainnet.near.org',\n//   contractName: 'berryclub.ek.near',\n//   walletUrl: 'https://wallet.near.org',\n// };\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {\n      async blockViewCall(blockId, methodName, args) {\n        args = args || {};\n        this.account.validateArgs(args);\n        const connection = blockId + NumBlocksNonArchival < this.lastBlockHeight ?\n          this.archivalConnection :\n          this.account.connection;\n        const result = await connection.provider.query({\n          request_type: 'call_function',\n          block_id: blockId,\n          account_id: NearConfig.contractName,\n          method_name: methodName,\n          args_base64: new Buffer(JSON.stringify(args), 'utf8').toString('base64'),\n        });\n        return result.result && result.result.length > 0 && JSON.parse(Buffer.from(result.result).toString());\n      }\n    };\n\n    this.state = {\n      connected: false,\n      isNavCollapsed: true,\n      newPosts: [],\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    this._near.archivalConnection = nearAPI.Connection.fromConfig({\n      networkId: NearConfig.networkId,\n      provider: { type: 'JsonRpcProvider', args: { url: NearConfig.archivalNodeUrl } },\n      signer: { type: 'InMemorySigner', keyStore }\n    });\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n    const block = await this._near.account.connection.provider.block({ finality: 'final' });\n    this._near.lastBlockHeight = block.header.height;\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_accounts', 'get_num_accounts', 'get_followers', 'get_following', 'get_post', 'storage_minimum_balance', 'storage_balance_of'],\n      changeMethods: ['storage_deposit', 'storage_withdraw', 'post', 'follow', 'unfollow'],\n    });\n    this._near.storageMinimumBalance = await this._near.contract.storage_minimum_balance();\n\n    this._near.accounts = {};\n    this._near.getAccount = (accountId) => {\n      if (accountId in this._near.accounts) {\n        return this._near.accounts[accountId];\n      }\n      return this._near.accounts[accountId] = Promise.resolve(AccountData.load(this._near, accountId));\n    };\n\n    if (this._near.accountId) {\n      this._near.accountData = await this._near.getAccount(this._near.accountId);\n      await this._near.accountData.fetchFollowings();\n      this.setState({\n        followings: Object.assign({}, this._near.accountData.followings),\n        enoughStorageBalance: this._near.accountData.stats.enoughStorageBalance,\n      });\n    }\n  }\n\n\n  async requestSignIn(e) {\n    e.preventDefault();\n    const appTitle = 'NEAR Vodka';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  async requestStorageBalance(e) {\n    e.preventDefault();\n    await this._near.contract.storage_deposit({}, \"30000000000000\", \"100000000000000000000000\");\n  }\n\n  render() {\n    window.yo = this;\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        {!this.state.enoughStorageBalance && (\n          <button\n            className=\"btn btn-primary me-md-2\"\n            onClick={(e) => this.requestStorageBalance(e)}>Add storage balance</button>\n        )}\n        <button\n          className=\"btn btn-outline-secondary\"\n          onClick={() => this.logOut()}>Log out ({this.state.signedAccountId})</button>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Log in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-3\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"/\" title=\"NEAR Vodka - connecting people\">\n              <img src={NearVodkaLogo} alt=\"NEAR Vodka\" className=\"d-inline-block align-middle\" />\n              NEAR Vodka\n            </a>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                  {/*<a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>*/}\n                </li>\n              </ul>\n              <form className=\"d-flex\">\n                {header}\n              </form>\n            </div>\n          </div>\n        </nav>\n\n        <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/near-vodka\" data-ribbon=\"Fork me on GitHub\"\n           title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path={\"/\"}>\n              <HomePage _near={this._near} {...this.state} updateState={(s) => this.setState(s)}/>\n            </Route>\n            <Route exact path={\"/a/:accountId\"}>\n              <AccountPage _near={this._near} {...this.state} updateState={(s) => this.setState(s)} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport Feed from \"../components/Feed\";\nimport FollowButton from \"../components/FollowButton\";\n\nfunction AccountPage(props) {\n  const { accountId } = useParams();\n  const [seed, setSeed] = useState(false);\n\n  const [account, setAccount] = useState(null);\n\n  if (props.connected && props._near) {\n    props._near.getAccount(accountId).then((account) => {\n      setAccount(account);\n    })\n  }\n\n  useEffect(() => {\n    if (props.connected && props._near && account) {\n      setSeed([[account.stats.lastPostHeight, accountId]]);\n    }\n  }, [props.connected, account])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col col-lg-8 col-xl-6\">\n          <h3>Account @{accountId}</h3>\n          <FollowButton {...props} accountId={accountId} account={account}/>\n          <h3>Posts</h3>\n          {seed && <Feed {...props} seed={seed}/>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountPage;\n","module.exports = __webpack_public_path__ + \"static/media/near_vodka_logo.f18e89c9.png\";","import React, {useState} from 'react';\n\nfunction NewPost(props) {\n  const [ body, setBody ] = useState(\"\");\n\n  const post = async () => {\n    let _body = body;\n    setBody(\"\");\n    await props._near.contract.post({body: _body})\n    let newPosts = {\n      accountId: props.signedAccountId,\n      post: {\n        body: _body,\n        time: (new Date().getTime() * 1000000).toString(),\n      }\n    }\n    props.updateState({\n      newPosts: [...props.newPosts, newPosts]\n    })\n  };\n\n  return (\n    <div>\n      <form>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\" placeholder={\"New post\"} rows=\"5\" value={body}\n            onChange={(e) => setBody(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-3 d-grid gap-2 d-md-flex justify-content-md-end\">\n          <button className=\"btn btn-primary\" disabled={!body} onClick={post}>Post now</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default NewPost;\n","import \"./Home.scss\";\nimport React, {useEffect, useState} from 'react';\nimport NewPost from \"../components/NewPost\";\nimport Feed from \"../components/Feed\";\nimport {convertAccountStats} from \"../data/Account\";\n\nconst FetchLimit = 100;\n\nfunction HomePage(props) {\n  const [followingSeed, setFollowingSeed] = useState(false);\n  const [latestSeed, setLatestSeed] = useState(false);\n\n  const accountData = props._near.accountData;\n  if (accountData && followingSeed === false) {\n    const seed = Object.entries(accountData.followings).map(\n      ([accountId, accountStats]) => [accountStats.lastPostHeight, accountId]\n    );\n    if (accountData.stats.lastPostHeight > 0) {\n      seed.push([accountData.stats.lastPostHeight, accountData.accountId]);\n    }\n    setFollowingSeed(seed);\n  }\n\n  async function fetchRandomFeed() {\n    const numAccounts = await props._near.contract.get_num_accounts();\n    return (await props._near.contract.get_accounts({\n      from_index: Math.max(numAccounts - FetchLimit, 0),\n      limit: FetchLimit\n    })).map(([accountId, accountStats]) => [convertAccountStats(accountStats).lastPostHeight, accountId]);\n  }\n\n  useEffect(() => {\n    if (props.connected && props._near) {\n      fetchRandomFeed().then((seed) => {\n        setLatestSeed(seed);\n      });\n    }\n  }, [props.connected])\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col col-lg-8 col-xl-6\">\n            {props.enoughStorageBalance && (\n              <NewPost {...props}/>\n            )}\n            {followingSeed && followingSeed.length > 0 && (\n              <div>\n                <h3>Feed</h3>\n                <Feed {...props} seed={followingSeed} extraPosts={props.newPosts}/>\n              </div>\n            )}\n            {latestSeed && (\n              <div>\n                <h3>Random</h3>\n                <Feed {...props} seed={latestSeed}/>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, {useState} from 'react';\nimport './Account.scss';\nimport ReactTooltip from \"react-tooltip\";\nimport {Link} from \"react-router-dom\";\nimport FollowButton from \"./FollowButton\";\n\nfunction Account(props) {\n  const [account, setAccount] = useState(null);\n\n  const accountId = props.accountId;\n  if (props.connected && props._near) {\n    props._near.getAccount(accountId).then((account) => {\n      setAccount(account);\n    })\n  }\n\n  return (\n    <div className=\"account\">\n      <Link className=\"account-handle\" data-tip data-for={`rt-${accountId}`} to={`/a/${accountId}`}>@{accountId}</Link>\n      <ReactTooltip id={`rt-${accountId}`} className='account-tooltip' delayHide={100} delayShow={200} effect='solid'>\n        <div>\n          <h5><Link className=\"account-handle\" to={`/a/${accountId}`}>@{accountId}</Link></h5>\n        </div>\n        <FollowButton {...props} accountId={accountId} account={account}/>\n        {account && (\n          <div>\n            <div>Num posts: {account.stats.numPosts}</div>\n            <div>Num followers: {account.stats.numFollowers}</div>\n            <div>Num following: {account.stats.numFollowing}</div>\n          </div>\n        )}\n      </ReactTooltip>\n    </div>\n  );\n}\n\nexport default Account;\n","import React from 'react';\nimport Account from \"./Account\";\nimport TimeAgo from \"timeago-react\";\n\nfunction Post(props) {\n  const accountId = props.accountId;\n  const post = props.post;\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\"><Account {...props} accountId={accountId} /></h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\"><TimeAgo datetime={new Date(parseFloat(post.time) / 1_000_000)} /></h6>\n        <p className=\"card-text\">\n          {post.body}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import React, {useEffect, useState} from 'react';\nimport Post from \"./Post\";\nimport { SortedSet } from \"collections/sorted-set\";\n\nfunction Feed(props) {\n  const [posts, setPosts] = useState([]);\n\n  const seed = props.seed;\n  const extraPosts = props.extraPosts || [];\n\n  async function fetchPosts(seed) {\n    const posts = [];\n    const recent = SortedSet(seed);\n    while (recent.length > 0 && posts.length < 10) {\n      const [blockHeight, accountId] = recent.pop();\n      if (blockHeight === 0) {\n        break;\n      }\n      const post = await props._near.blockViewCall(blockHeight, 'get_post', {account_id: accountId});\n      if (post) {\n        if (post.last_post_height > 0) {\n          recent.push([post.last_post_height, accountId])\n        }\n        posts.push({\n          accountId,\n          post\n        })\n        setPosts([...posts]);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (seed !== false) {\n      fetchPosts(seed);\n    }\n  }, [seed]);\n\n  const feed = [...extraPosts, ...posts].map(post => {\n    const key = `${post.accountId}/${post.post.block_height}`;\n    return <Post key={key} accountId={post.accountId} post={post.post} {...props}/>;\n  });\n  return (\n    <div>\n      {feed}\n    </div>\n  );\n}\n\nexport default Feed;\n","import React from 'react';\nimport './FollowButton.scss';\n\nfunction FollowButton(props) {\n  const accountId = props.accountId;\n  const account = props.account;\n\n  const follow = async () => {\n    if (!props.followings || (accountId in props.followings)) {\n      return;\n    }\n    props._near.accountData.followings[accountId] = account.stats;\n    props.updateState({\n      followings: Object.assign({}, props._near.accountData.followings),\n    })\n    await props._near.contract.follow({account_id: accountId});\n  };\n\n  const unfollow = async () => {\n    if (!props.followings || !(accountId in props.followings)) {\n      return;\n    }\n    delete props._near.accountData.followings[accountId];\n    props.updateState({\n      followings: Object.assign({}, props._near.accountData.followings),\n    })\n    await props._near.contract.unfollow({account_id: accountId});\n  };\n\n  return (\n    <div className=\"follow-button mb-3\">\n      {(!account) ? (\n        <div>Loading</div>\n      ) : (accountId === props.signedAccountId) ? (\n        <div>It's you</div>\n      ) : (props.followings && (accountId in props.followings)) ? (\n        <button className=\"btn btn-primary btn-unfollow\" onClick={unfollow}><span>Following</span></button>\n      ) : (\n        <button className=\"btn btn-outline-primary btn-follow\" onClick={follow}>Follow</button>\n      )}\n    </div>\n  );\n}\n\nexport default FollowButton;\n","import BN from \"bn.js\";\n\nconst MinEnoughStorageBalance = new BN(\"50000000000000000000000\");\nconst FetchLimit = 100;\n\nconst convertAccountStats = (accountStats) => {\n  return {\n    numPosts: accountStats.num_posts,\n    numFollowers: accountStats.num_followers,\n    numFollowing: accountStats.num_following,\n    lastPostHeight: accountStats.last_post_height,\n  };\n};\n\nclass AccountData {\n  constructor(_near, accountId) {\n    this._near = _near;\n    this.accountId = accountId;\n    this.stats = {\n      lastPostHeight: 0,\n      numFollowers: 0,\n      numFollowing: 0,\n      numPosts: 0,\n      enoughStorageBalance: false,\n    };\n    this.followings = false;\n    this.followers = false;\n    this._ready = false;\n  }\n\n  static async load(_near, accountId) {\n    let account = new AccountData(_near, accountId);\n    await account.fetch();\n    return account;\n  }\n\n  async _fetchStorageBalance() {\n    let storageBalance = await this._near.contract.storage_balance_of({account_id: this.accountId});\n    this.stats.storageTotal = new BN(storageBalance.total);\n    this.stats.storageAvailable = new BN(storageBalance.available);\n    this.stats.enoughStorageBalance = this.stats.storageAvailable > MinEnoughStorageBalance;\n  }\n\n  async _fetchAccountStats() {\n    const accountStats = await this._near.contract.get_account({account_id: this.accountId});\n    if (accountStats) {\n      Object.assign(this.stats, convertAccountStats(accountStats));\n    }\n  }\n\n  async fetch() {\n    await Promise.all([this._fetchStorageBalance(), this._fetchAccountStats()]);\n    this._ready = true;\n  }\n\n  async fetchFollowings() {\n    if (this.followings !== false) {\n      return;\n    }\n    const promises = [];\n    for (let i = 0; i < this.stats.numFollowing; i += FetchLimit) {\n      promises.push(this._near.contract.get_following({\n        account_id: this.accountId,\n        from_index: i,\n        limit: FetchLimit,\n      }));\n    }\n    this.followings = {};\n    (await Promise.all(promises)).flat().forEach(([accountId, accountStats]) => {\n      this.followings[accountId] = convertAccountStats(accountStats);\n    });\n  }\n}\n\nexport {AccountData, convertAccountStats};\n"],"sourceRoot":""}