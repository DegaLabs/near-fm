{"version":3,"sources":["App.js","pages/Home.js","pages/Account.js","images/near_vodka_logo.png","pages/Post.js","index.js","components/Followers.js","components/Feed.js","components/NewPost.js","data/Post.js","components/AddStorageButton.js","components/AccountCard.js","components/FollowButton.js","data/Account.js","components/Account.js","components/Post.js","pages/Discover.js"],"names":["NearConfig","window","location","hostname","networkId","nodeUrl","archivalNodeUrl","contractName","walletUrl","App","props","_near","blockViewCall","blockId","methodName","args","account","validateArgs","connection","lastBlockHeight","archivalConnection","provider","query","request_type","block_id","account_id","method_name","args_base64","Buffer","JSON","stringify","toString","result","length","parse","from","state","connected","isNavCollapsed","newPosts","followers","following","_initNear","then","setState","signedIn","accountId","signedAccountId","a","keyStore","nearAPI","BrowserLocalStorageKeyStore","Object","assign","deps","near","this","fromConfig","type","url","signer","walletConnection","getAccountId","block","finality","header","height","contract","viewMethods","changeMethods","storage_minimum_balance","storageMinimumBalance","accounts","getAccount","Promise","resolve","AccountData","load","cacheAccount","posts","getPost","blockHeight","key","PostData","accountData","fetchStorageBalance","fetchFollowings","followings","enoughStorageBalance","stats","fetchFollowers","e","preventDefault","requestSignIn","signOut","_accountId","passProps","updateState","s","className","onClick","logOut","role","aria-hidden","basename","process","href","title","src","NearVodkaLogo","alt","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","to","data-ribbon","exact","path","React","Component","HomePage","useState","followingSeed","setFollowingSeed","useEffect","seed","entries","map","lastPostHeight","push","extraPosts","AccountPage","useParams","setSeed","setAccount","console","log","module","exports","PostPage","post","setPost","parseInt","ReactDOM","render","document","getElementById","Followers","notFollowing","keys","filter","Feed","loading","setLoading","setPosts","fetchPosts","useCallback","recent","SortedSet","pop","feed","NewPost","body","setBody","_body","convertPost","placeholder","rows","value","onChange","target","disabled","time","Date","parseFloat","block_height","last_post_height","requestBlockHeight","_ready","fetch","AddStorageButton","storage_deposit","AccountCard","numPosts","numFollowers","numFollowing","FollowButton","alert","follow","unfollow","MinEnoughStorageBalance","BN","convertAccountStats","accountStats","num_posts","num_followers","num_following","storage_balance_of","storageBalance","storageTotal","total","storageAvailable","available","get_account","promises","i","get_following","from_index","limit","all","flat","forEach","get_followers","fetchAccountStats","Account","data-tip","data-for","delayHide","delayShow","effect","Post","datetime","DiscoverPage","fetchSeed","get_num_accounts","numAccounts","get_accounts","Math","max"],"mappings":"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","file":"static/js/main.1200d5a7.chunk.js","sourcesContent":["import React from 'react';\nimport \"error-polyfill\";\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.scss\";\nimport './gh-fork-ribbon.css';\nimport HomePage from \"./pages/Home\"\nimport AccountPage from \"./pages/Account\"\nimport {HashRouter as Router, Link, Route, Switch} from 'react-router-dom'\nimport * as nearAPI from 'near-api-js'\nimport {AccountData} from \"./data/Account\";\nimport NearVodkaLogo from \"./images/near_vodka_logo.png\"\nimport PostPage from \"./pages/Post\";\nimport {PostData} from \"./data/Post\";\nimport DiscoverPage from \"./pages/Discover\";\nimport AddStorageButton from \"./components/AddStorageButton\";\n\n// 4 epochs\nconst NumBlocksNonArchival = 4 * 12 * 3600;\n\nconst IsMainnet = window.location.hostname === \"near.vodka\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1613368835598-7014445',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\n\nconst MainNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  archivalNodeUrl: 'https://rpc.testnet.internal.near.org',\n  contractName: 'dev-1613368835598-7014445',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\n\n// const MainNearConfig = {\n//   networkId: 'mainnet',\n//   nodeUrl: 'https://rpc.mainnet.near.org',\n//   contractName: 'berryclub.ek.near',\n//   walletUrl: 'https://wallet.near.org',\n// };\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._near = {\n      async blockViewCall(blockId, methodName, args) {\n        args = args || {};\n        this.account.validateArgs(args);\n        const connection = blockId + NumBlocksNonArchival < this.lastBlockHeight ?\n          this.archivalConnection :\n          this.account.connection;\n        const result = await connection.provider.query({\n          request_type: 'call_function',\n          block_id: blockId,\n          account_id: NearConfig.contractName,\n          method_name: methodName,\n          args_base64: new Buffer(JSON.stringify(args), 'utf8').toString('base64'),\n        });\n        return result.result && result.result.length > 0 && JSON.parse(Buffer.from(result.result).toString());\n      }\n    };\n\n    this.state = {\n      connected: false,\n      isNavCollapsed: true,\n      newPosts: [],\n      followers: {},\n      following: {},\n    };\n\n    this._initNear().then(() => {\n      this.setState({\n        signedIn: !!this._near.accountId,\n        signedAccountId: this._near.accountId,\n        connected: true,\n      });\n    });\n  }\n\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    this._near.archivalConnection = nearAPI.Connection.fromConfig({\n      networkId: NearConfig.networkId,\n      provider: { type: 'JsonRpcProvider', args: { url: NearConfig.archivalNodeUrl } },\n      signer: { type: 'InMemorySigner', keyStore }\n    });\n    this._near.keyStore = keyStore;\n    this._near.near = near;\n\n    this._near.walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._near.accountId = this._near.walletConnection.getAccountId();\n\n    this._near.account = this._near.walletConnection.account();\n    const block = await this._near.account.connection.provider.block({ finality: 'final' });\n    this._near.lastBlockHeight = block.header.height;\n    this._near.contract = new nearAPI.Contract(this._near.account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_accounts', 'get_num_accounts', 'get_followers', 'get_following', 'get_post', 'storage_minimum_balance', 'storage_balance_of'],\n      changeMethods: ['storage_deposit', 'storage_withdraw', 'post', 'follow', 'unfollow'],\n    });\n    this._near.storageMinimumBalance = await this._near.contract.storage_minimum_balance();\n\n    this._near.accounts = {};\n    this._near.getAccount = (accountId) => {\n      if (accountId in this._near.accounts) {\n        return this._near.accounts[accountId];\n      }\n      return this._near.accounts[accountId] = Promise.resolve(AccountData.load(this._near, accountId));\n    };\n\n    this._near.cacheAccount = (accountId, account) => {\n      if (accountId in this._near.accounts) {\n        return;\n      }\n      this._near.accounts[accountId] = Promise.resolve(account);\n    };\n\n    this._near.posts = {};\n    this._near.getPost = (accountId, blockHeight) => {\n      const key = `${accountId}/${blockHeight}`;\n      if (key in this._near.posts) {\n        return this._near.posts[key];\n      }\n      return this._near.posts[key] = Promise.resolve(PostData.load(this._near, accountId, blockHeight));\n    };\n\n    if (this._near.accountId) {\n      this._near.accountData = await this._near.getAccount(this._near.accountId);\n      await this._near.accountData.fetchStorageBalance();\n      await this._near.accountData.fetchFollowings();\n      this.setState({\n        followings: Object.assign({}, this._near.accountData.followings),\n        enoughStorageBalance: this._near.accountData.stats.enoughStorageBalance,\n      });\n      this._near.accountData.fetchFollowers().then(() => {\n        this.setState({\n          followers: Object.assign({}, this._near.accountData.followers),\n        });\n      })\n    }\n  }\n\n\n  async requestSignIn(e) {\n    e.preventDefault();\n    const appTitle = 'NEAR Vodka';\n    await this._near.walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n    return false;\n  }\n\n  async logOut() {\n    this._near.walletConnection.signOut();\n    this._near.accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      signedAccountId: this._accountId,\n    })\n  }\n\n  render() {\n    const passProps = {\n      _near: this._near,\n      updateState: (s) => this.setState(s),\n      ...this.state\n    };\n    const header = !this.state.connected ? (\n      <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n      <div>\n        <AddStorageButton {...passProps}/>\n        <button\n          className=\"btn btn-outline-secondary\"\n          onClick={() => this.logOut()}>Log out ({this.state.signedAccountId})</button>\n      </div>\n    ) : (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={(e) => this.requestSignIn(e)}>Log in with NEAR Wallet</button>\n      </div>\n    ));\n\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-3\">\n            <div className=\"container-fluid\">\n              <a className=\"navbar-brand\" href=\"/\" title=\"NEAR Vodka - connecting people\">\n                <img src={NearVodkaLogo} alt=\"NEAR Vodka\" className=\"d-inline-block align-middle\" />\n                [TESTNET] NEAR Vodka\n              </a>\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                      data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n                  </li>\n                  {this.state.signedIn && (\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link\" aria-current=\"page\" to=\"/discover\">Discover</Link>\n                    </li>\n                  )}\n                  {this.state.signedIn && (\n                    <li className=\"nav-item\">\n                      <Link className=\"nav-link\" aria-current=\"page\"\n                            to={`/a/${this.state.signedAccountId}`}>Profile</Link>\n                    </li>\n                  )}\n                </ul>\n                <form className=\"d-flex\">\n                  {header}\n                </form>\n              </div>\n            </div>\n          </nav>\n\n          <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/near-vodka\" data-ribbon=\"Fork me on GitHub\"\n             title=\"Fork me on GitHub\">Fork me on GitHub</a>\n\n          <Switch>\n            <Route exact path={\"/\"}>\n              {this.state.signedIn ? (\n                <HomePage {...passProps}/>\n              ) : (\n                <DiscoverPage {...passProps}/>\n              )}\n            </Route>\n            <Route exact path={\"/discover\"}>\n              <DiscoverPage {...passProps}/>\n            </Route>\n            <Route exact path={\"/a/:accountId\"}>\n              <AccountPage {...passProps} />\n            </Route>\n            <Route exact path={\"/p/:accountId/:blockHeight\"}>\n              <PostPage {...passProps} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import \"./Home.scss\";\nimport React, {useEffect, useState} from 'react';\nimport NewPost from \"../components/NewPost\";\nimport Feed from \"../components/Feed\";\nimport Followers from \"../components/Followers\";\nimport {Link} from \"react-router-dom\";\n\nfunction HomePage(props) {\n  const [followingSeed, setFollowingSeed] = useState(false);\n\n  useEffect(() => {\n    if (props.connected) {\n      const accountData = props._near.accountData;\n      if (accountData) {\n        const seed = Object.entries(props.followings).map(\n          ([accountId, account]) => [account.stats.lastPostHeight, accountId]\n        );\n        if (accountData.stats.lastPostHeight > 0) {\n          seed.push([accountData.stats.lastPostHeight, accountData.accountId]);\n        }\n        setFollowingSeed(seed);\n      } else {\n        setFollowingSeed([]);\n      }\n    }\n  }, [props.connected, props.followings, props._near.accountData])\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col col-12 col-lg-8 col-xl-6\">\n            <NewPost {...props}/>\n            {(followingSeed && followingSeed.length > 0) ? (\n              <div>\n                <h3>Your Feed</h3>\n                <Feed {...props} seed={followingSeed} extraPosts={props.newPosts}/>\n              </div>\n            ) : followingSeed ? (\n              <div>\n                <h3>Feed is empty</h3>\n                <div>\n                  <Link to={\"/discover\"} className=\"btn btn-outline-secondary\">Discover more</Link>\n                </div>\n              </div>\n            ) :  (\n              <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-grow\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"col col-12 col-lg-4 col-xl-4\">\n            {props.signedIn && <Followers {...props} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport Feed from \"../components/Feed\";\nimport FollowButton from \"../components/FollowButton\";\nimport Followers from \"../components/Followers\";\nimport NewPost from \"../components/NewPost\";\n\nfunction AccountPage(props) {\n  const { accountId } = useParams();\n  const [seed, setSeed] = useState(false);\n\n  const [account, setAccount] = useState(null);\n\n  if (props.connected && props._near) {\n    console.log(props._near);\n    props._near.getAccount(accountId).then((account) => {\n      setAccount(account);\n    })\n  }\n\n  useEffect(() => {\n    if (props.connected && account) {\n      setSeed([[account.stats.lastPostHeight, account.accountId]]);\n    }\n  }, [props.connected, account])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col col-12 col-lg-8 col-xl-6\">\n          <h3>Account @{accountId}</h3>\n          {accountId === props.signedAccountId ? (\n            <div>\n              <NewPost {...props}/>\n              <h3>Your Posts</h3>\n            </div>\n          ) : (\n            <div>\n              <FollowButton {...props} accountId={accountId} account={account}/>\n              <h3>Posts</h3>\n            </div>\n          )}\n          {seed ? (\n            <Feed {...props} seed={seed}/>\n          ) : (\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"spinner-grow\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"col col-12 col-lg-4 col-xl-4\">\n          {props.signedIn && <Followers {...props} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountPage;\n","module.exports = __webpack_public_path__ + \"static/media/near_vodka_logo.f18e89c9.png\";","import React, {useState} from 'react';\nimport {useParams} from \"react-router\";\nimport Post from \"../components/Post\";\nimport Followers from \"../components/Followers\";\n\nfunction PostPage(props) {\n  const { accountId, blockHeight } = useParams();\n  const [post, setPost] = useState(false);\n\n  if (props.connected && props._near) {\n    props._near.getPost(accountId, parseInt(blockHeight)).then((post) => {\n      setPost(post);\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col col-12 col-lg-8 col-xl-6\">\n          {post ? (\n            <Post {...props} post={post}/>\n          ) : (\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"spinner-grow\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"col col-12 col-lg-4 col-xl-4\">\n          {props.signedIn && <Followers {...props} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PostPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport './Post.scss';\nimport AccountCard from \"./AccountCard\";\n\nfunction Followers(props) {\n  const notFollowing = Object.keys(props.followers).filter((accountId) => !(accountId in props.followings));\n  const following = Object.keys(props.followers).filter((accountId) => (accountId in props.followings))\n\n  const followers = [...notFollowing, ...following].map((accountId) => {\n    const key = `f/${accountId}`;\n    return (\n      <div key={key} className=\"follower\">\n        <div className=\"card mb-3\">\n          <div className=\"card-body\">\n            <AccountCard accountId={accountId} {...props}/>\n          </div>\n        </div>\n      </div>\n    )\n  });\n\n  return (\n    <div>\n      <h3>Your followers</h3>\n      {followers.length > 0 ? followers : (\n        <div className=\"text-muted\">\n          No one is following you :(\n        </div>\n      )}\n      {!props.connected && (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"spinner-grow\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Followers;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport Post from \"./Post\";\nimport { SortedSet } from \"collections/sorted-set\";\n\nfunction Feed(props) {\n  const [loading, setLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n\n  const seed = props.seed;\n  const extraPosts = props.extraPosts || [];\n\n  const fetchPosts = useCallback(async () => {\n    const posts = [];\n    const recent = SortedSet(seed);\n    while (recent.length > 0 && posts.length < 10) {\n      const [blockHeight, accountId] = recent.pop();\n      if (blockHeight === 0) {\n        break;\n      }\n\n      const post = await props._near.getPost(accountId, blockHeight);\n      if (post) {\n        if (post.lastPostHeight > 0) {\n          recent.push([post.lastPostHeight, accountId])\n        }\n        posts.push(post);\n        setPosts([...posts]);\n      }\n    }\n  }, [seed, props._near])\n\n  useEffect(() => {\n    setLoading(true);\n    fetchPosts().then(() => setLoading(false))\n  }, [fetchPosts]);\n\n  const feed = [...extraPosts, ...posts].map(post => {\n    const key = `${post.accountId}/${post.blockHeight}`;\n    return <Post key={key} post={post} {...props}/>;\n  });\n  return (\n    <div>\n      {!loading ? (\n        (feed.length > 0) ? feed : (\n          <div className=\"text-muted\">\n            No posts.\n          </div>\n        )\n      ) : (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"spinner-grow\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Feed;\n","import React, {useState} from 'react';\nimport {convertPost} from \"../data/Post\";\nimport AddStorageButton from \"./AddStorageButton\";\n\nfunction NewPost(props) {\n  const [ body, setBody ] = useState(\"\");\n  const [ loading, setLoading ] = useState(false);\n\n  const post = async () => {\n    let _body = body;\n    setLoading(true);\n    setBody(\"\");\n    let newPosts = convertPost(await props._near.contract.post({body: _body}));\n    newPosts.accountId = props.signedAccountId;\n    props.updateState({\n      newPosts: [...props.newPosts, newPosts]\n    })\n    setLoading(false);\n  };\n\n  return props.enoughStorageBalance ? (\n    <div>\n      <form>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\" placeholder={\"New post\"} rows=\"5\" value={body}\n            onChange={(e) => setBody(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-3 d-grid gap-2 d-md-flex justify-content-md-end\">\n          <button className=\"btn btn-primary\" disabled={!body} onClick={post}>\n            {loading ? (\n              <span>\n                <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                <span className=\"visually-hidden\">Loading...</span>\n                {' '}Posting\n              </span>\n            ) : (\n              <span>Post now</span>\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  ) : (\n    <div className=\"mb-3\">\n      <div>\n        <div className=\"alert alert-danger\" role=\"alert\">\n          <b>Not enough storage balance!</b><br/>\n          Add storage balance to be able to post and follow people.\n        </div>\n      </div>\n      <div>\n        <AddStorageButton {...props}/>\n      </div>\n    </div>\n  );\n}\n\nexport default NewPost;\n","const convertPost = (post) => {\n  return {\n    body: post.body,\n    time: new Date(parseFloat(post.time) / 1_000_000),\n    blockHeight: post.block_height,\n    lastPostHeight: post.last_post_height,\n  };\n};\n\nclass PostData {\n  constructor(_near, accountId, requestBlockHeight) {\n    this._near = _near;\n    this.accountId = accountId;\n    this.requestBlockHeight = requestBlockHeight;\n    this._ready = false;\n  }\n\n  static async load(_near, accountId, requestBlockHeight) {\n    let post = new PostData(_near, accountId, requestBlockHeight);\n    await post.fetch();\n    return post;\n  }\n\n\n  async fetch() {\n    const post = await this._near.blockViewCall(this.requestBlockHeight, 'get_post', {account_id: this.accountId});\n    if (post) {\n      Object.assign(this, convertPost(post));\n    }\n    this._ready = true;\n  }\n}\n\nexport {PostData, convertPost};\n","import React from 'react';\n\nfunction AddStorageButton(props) {\n  async function requestStorageBalance(e) {\n    e.preventDefault();\n    await props._near.contract.storage_deposit({}, \"30000000000000\", \"100000000000000000000000\");\n  }\n\n  return !props.enoughStorageBalance && (\n    <button\n      className=\"btn btn-primary me-md-2\"\n      onClick={requestStorageBalance}\n    >\n      Add storage balance\n    </button>\n  );\n}\n\nexport default AddStorageButton;\n","import React, {useState} from 'react';\nimport './Account.scss';\nimport {Link} from \"react-router-dom\";\nimport FollowButton from \"./FollowButton\";\n\nfunction AccountCard(props) {\n  const [account, setAccount] = useState(null);\n\n  const accountId = props.accountId;\n  if (props.connected && props._near) {\n    props._near.getAccount(accountId).then((account) => {\n      setAccount(account);\n    })\n  }\n\n  return (\n    <div>\n      <div>\n        <h5><Link className=\"account-handle\" to={`/a/${accountId}`}>@{accountId}</Link></h5>\n      </div>\n      <FollowButton {...props} accountId={accountId} account={account}/>\n      {account && (\n        <div>\n          <div>Num posts: {account.stats.numPosts}</div>\n          <div>Num followers: {account.stats.numFollowers}</div>\n          <div>Num following: {account.stats.numFollowing}</div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AccountCard;\n","import React from 'react';\nimport './FollowButton.scss';\n\nfunction FollowButton(props) {\n  const accountId = props.accountId;\n  const account = props.account;\n\n  async function follow() {\n    if (!props.enoughStorageBalance) {\n      alert('Add storage balance to follow');\n      return;\n    }\n    if (!props.followings || (accountId in props.followings)) {\n      return;\n    }\n    props._near.accountData.followings[accountId] = account;\n    props.updateState({\n      followings: Object.assign({}, props._near.accountData.followings),\n    })\n    await props._near.contract.follow({account_id: accountId});\n  }\n\n  async function unfollow() {\n    if (!props.followings || !(accountId in props.followings)) {\n      return;\n    }\n    delete props._near.accountData.followings[accountId];\n    props.updateState({\n      followings: Object.assign({}, props._near.accountData.followings),\n    })\n    await props._near.contract.unfollow({account_id: accountId});\n  }\n\n  return (\n    <div className=\"follow-button mb-3\">\n      {(!account) ? (\n        <div className=\"spinner-grow\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      ) : (accountId === props.signedAccountId) ? (\n        <div>It's you</div>\n      ) : (props.followings && (accountId in props.followings)) ? (\n        <button className=\"btn btn-primary btn-unfollow\" onClick={unfollow}><span>Following</span></button>\n      ) : (props.signedIn) ? (\n        <button\n          className=\"btn btn-outline-primary btn-follow\"\n          onClick={follow}\n          >Follow</button>\n      ) : (\n        <button\n          className=\"btn btn-outline-secondary btn-follow\"\n          disabled={true}\n          >Sign in to Follow</button>\n      )}\n    </div>\n  );\n}\n\nexport default FollowButton;\n","import BN from \"bn.js\";\n\nconst MinEnoughStorageBalance = new BN(\"50000000000000000000000\");\nconst FetchLimit = 100;\n\nconst convertAccountStats = (accountStats) => {\n  return {\n    numPosts: accountStats.num_posts,\n    numFollowers: accountStats.num_followers,\n    numFollowing: accountStats.num_following,\n    lastPostHeight: accountStats.last_post_height,\n  };\n};\n\nclass AccountData {\n  constructor(_near, accountId, accountStats) {\n    this._near = _near;\n    this.accountId = accountId;\n    this.stats = {\n      lastPostHeight: 0,\n      numFollowers: 0,\n      numFollowing: 0,\n      numPosts: 0,\n      enoughStorageBalance: false,\n    };\n    if (accountStats) {\n      Object.assign(this.stats, convertAccountStats(accountStats));\n      this._ready = true;\n    } else {\n      this._ready = false;\n    }\n    this.followings = false;\n    this.followers = false;\n    this._near.cacheAccount(accountId, this);\n  }\n\n  static async load(_near, accountId) {\n    let account = new AccountData(_near, accountId);\n    await account.fetchAccountStats();\n    return account;\n  }\n\n  async fetchStorageBalance() {\n    let storageBalance = await this._near.contract.storage_balance_of({account_id: this.accountId});\n    this.stats.storageTotal = new BN(storageBalance.total);\n    this.stats.storageAvailable = new BN(storageBalance.available);\n    this.stats.enoughStorageBalance = this.stats.storageAvailable > MinEnoughStorageBalance;\n  }\n\n  async fetchAccountStats() {\n    const accountStats = await this._near.contract.get_account({account_id: this.accountId});\n    if (accountStats) {\n      Object.assign(this.stats, convertAccountStats(accountStats));\n      this._ready = true;\n    }\n  }\n\n  async fetchFollowings() {\n    if (this.followings !== false) {\n      return;\n    }\n    const promises = [];\n    for (let i = 0; i < this.stats.numFollowing; i += FetchLimit) {\n      promises.push(this._near.contract.get_following({\n        account_id: this.accountId,\n        from_index: i,\n        limit: FetchLimit,\n      }));\n    }\n    this.followings = {};\n    (await Promise.all(promises)).flat().forEach(([accountId, accountStats]) => {\n      this.followings[accountId] = new AccountData(this._near, accountId, accountStats);\n    });\n  }\n\n  async fetchFollowers() {\n    if (this.followers !== false) {\n      return;\n    }\n    const promises = [];\n    for (let i = 0; i < this.stats.numFollowers; i += FetchLimit) {\n      promises.push(this._near.contract.get_followers({\n        account_id: this.accountId,\n        from_index: i,\n        limit: FetchLimit,\n      }));\n    }\n    this.followers = {};\n    (await Promise.all(promises)).flat().forEach(([accountId, accountStats]) => {\n      this.followers[accountId] = new AccountData(this._near, accountId, accountStats);\n    });\n  }\n}\n\nexport {AccountData, convertAccountStats};\n","import React from 'react';\nimport './Account.scss';\nimport ReactTooltip from \"react-tooltip\";\nimport {Link} from \"react-router-dom\";\nimport AccountCard from \"./AccountCard\";\n\nfunction Account(props) {\n  const accountId = props.accountId;\n\n  return (\n    <div className=\"account\">\n      <Link className=\"account-handle\" data-tip data-for={`rt-${accountId}`} to={`/a/${accountId}`}>@{accountId}</Link>\n      <ReactTooltip id={`rt-${accountId}`} className='account-tooltip' delayHide={100} delayShow={200} effect='solid'>\n        <AccountCard {...props} accountId={accountId} />\n\n      </ReactTooltip>\n    </div>\n  );\n}\n\nexport default Account;\n","import React from 'react';\nimport './Post.scss';\nimport Account from \"./Account\";\nimport TimeAgo from \"timeago-react\";\nimport {Link} from \"react-router-dom\";\n\nfunction Post(props) {\n  const post = props.post;\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\"><Account {...props} accountId={post.accountId} /></h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">\n          <Link className=\"post-link\" to={`/p/${post.accountId}/${post.blockHeight}`}><TimeAgo datetime={post.time} /></Link>\n        </h6>\n        <div className=\"card-text\">\n          {post.body}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import \"./Home.scss\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport Feed from \"../components/Feed\";\nimport {AccountData} from \"../data/Account\";\nimport Followers from \"../components/Followers\";\n\nconst FetchLimit = 100;\n\nfunction DiscoverPage(props) {\n  const [seed, setSeed] = useState(false);\n\n  const fetchSeed = useCallback(async () => {\n    if (props.connected) {\n      const numAccounts = await props._near.contract.get_num_accounts();\n      return (await props._near.contract.get_accounts({\n        from_index: Math.max(numAccounts - FetchLimit, 0),\n        limit: FetchLimit\n      })).map(([accountId, accountStats]) => {\n        let account = new AccountData(props._near, accountId, accountStats);\n        return [account.stats.lastPostHeight, accountId]\n      });\n    } else {\n      return false;\n    }\n  }, [props.connected, props._near])\n\n  useEffect(() => {\n    fetchSeed().then(setSeed);\n  }, [fetchSeed]);\n\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col col-12 col-lg-8 col-xl-6\">\n            {seed && seed.length > 0 && (\n              <div>\n                <h3>Discover</h3>\n                <Feed {...props} seed={seed}/>\n              </div>\n            )}\n            {!seed && (\n              <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-grow\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"col col-12 col-lg-4 col-xl-4\">\n            {props.signedIn && <Followers {...props} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DiscoverPage;\n"],"sourceRoot":""}